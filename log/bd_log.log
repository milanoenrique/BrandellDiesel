[2019-10-28 17:39:05.00340100] 7ERROR:  invalid input syntax for type timestamp: ""
CONTEXT:  SQL statement "INSERT INTO expenditure (project_name,afe_number,description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by)   
			select project_name,afe_number, description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by
			from json_populate_recordset(null::expenditure, inexpenditure)"
PL/pgSQL function insert_expenditure(json) line 7 at SQL statement
[2019-10-28 17:56:33.18195600] 7ERROR:  invalid input syntax for type timestamp: ""
CONTEXT:  SQL statement "INSERT INTO expenditure (project_name,afe_number,description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by)   
			select project_name,afe_number, description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by
			from json_populate_recordset(null::expenditure, inexpenditure)"
PL/pgSQL function insert_expenditure(json) line 7 at SQL statement
[2019-10-28 17:56:33.23013300] 7ERROR:  invalid input syntax for type timestamp: ""
CONTEXT:  SQL statement "INSERT INTO expenditure (project_name,afe_number,description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by)   
			select project_name,afe_number, description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by
			from json_populate_recordset(null::expenditure, inexpenditure)"
PL/pgSQL function insert_expenditure(json) line 7 at SQL statement
[2019-10-28 17:58:43.99619800] 7ERROR:  invalid input syntax for type timestamp: ""
CONTEXT:  SQL statement "INSERT INTO expenditure (project_name,afe_number,description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by)   
			select project_name,afe_number, description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by
			from json_populate_recordset(null::expenditure, inexpenditure)"
PL/pgSQL function insert_expenditure(json) line 7 at SQL statement
[2019-10-28 18:01:35.97105800] transaction successfully registration expenditur complete
[2019-10-28 18:02:28.28857300] transaction successfully update expenditure complete
[2019-10-28 18:08:24.48412600] 7ERROR:  invalid input syntax for type json
DETAIL:  Token "undefined" is invalid.
CONTEXT:  JSON data, line 1: undefined
[2019-10-28 18:11:50.08264200] 7ERROR:  invalid input syntax for type json
DETAIL:  Token "undefined" is invalid.
CONTEXT:  JSON data, line 1: undefined
[2019-10-28 18:13:22.34602600] 7ERROR:  invalid input syntax for type json
DETAIL:  Token "undefined" is invalid.
CONTEXT:  JSON data, line 1: undefined
[2019-10-28 18:16:34.01534100] 7ERROR:  function request_update(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying) does not exist
LINE 1: SELECT * FROM request_update(inidrequest, injobnumber, inapp...
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT * FROM request_update(inidrequest, injobnumber, inappuser, inidrequesttype, inidpriority, 
							  inro, invin, intrans, inengine, inreqcomment, inreqstatus)
CONTEXT:  PL/pgSQL function json_update_req_parts(integer,json,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,json) line 23 at PERFORM
[2019-10-28 18:16:56.68679000] 7ERROR:  function request_update(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying) does not exist
LINE 1: SELECT * FROM request_update(inidrequest, injobnumber, inapp...
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT * FROM request_update(inidrequest, injobnumber, inappuser, inidrequesttype, inidpriority, 
							  inro, invin, intrans, inengine, inreqcomment, inreqstatus)
CONTEXT:  PL/pgSQL function json_update_req_parts(integer,json,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,json) line 23 at PERFORM
[2019-10-28 18:19:30.96296600] 7ERROR:  function request_update(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying) does not exist
LINE 1: SELECT * FROM request_update(inidrequest, injobnumber, inapp...
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT * FROM request_update(inidrequest, injobnumber, inappuser, inidrequesttype, inidpriority, 
							  inro, invin, intrans, inengine, inreqcomment, inreqstatus)
CONTEXT:  PL/pgSQL function json_update_req_parts(integer,json,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,json) line 23 at PERFORM
[2019-10-28 18:27:03.48860100] 7ERROR:  function request_update(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying) does not exist
LINE 1: SELECT * FROM request_update(inidrequest, injobnumber, inapp...
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT * FROM request_update(inidrequest, injobnumber, inappuser, inidrequesttype, inidpriority, 
							  inro, invin, intrans, inengine, inreqcomment, inreqstatus)
CONTEXT:  PL/pgSQL function json_update_req_parts(integer,json,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,json) line 23 at PERFORM
[2019-10-28 18:35:41.78888100] 7ERROR:  function request_update(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying) does not exist
LINE 1: SELECT * FROM request_update(inidrequest, injobnumber, inapp...
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT * FROM request_update(inidrequest, injobnumber, inappuser, inidrequesttype, inidpriority, 
							  inro, invin, intrans, inengine, inreqcomment, inreqstatus)
CONTEXT:  PL/pgSQL function json_update_req_parts(integer,json,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,json) line 23 at PERFORM
[2019-10-28 18:45:34.52987200] 7ERROR:  function request_update(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying) does not exist
LINE 1: SELECT * FROM request_update(inidrequest, injobnumber, inapp...
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT * FROM request_update(inidrequest, injobnumber, inappuser, inidrequesttype, inidpriority, 
							  inro, invin, intrans, inengine, inreqcomment, inreqstatus)
CONTEXT:  PL/pgSQL function json_update_req_parts(integer,json,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,json) line 23 at PERFORM
[2019-10-28 18:46:36.25516100] 7ERROR:  function request_update(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying) does not exist
LINE 1: SELECT * FROM request_update(inidrequest, injobnumber, inapp...
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT * FROM request_update(inidrequest, injobnumber, inappuser, inidrequesttype, inidpriority, 
							  inro, invin, intrans, inengine, inreqcomment, inreqstatus)
CONTEXT:  PL/pgSQL function json_update_req_parts(integer,json,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,json) line 23 at PERFORM
[2019-10-28 18:47:03.17226100] 7ERROR:  function request_update(integer, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying) does not exist
LINE 1: SELECT * FROM request_update(inidrequest, injobnumber, inapp...
                      ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT * FROM request_update(inidrequest, injobnumber, inappuser, inidrequesttype, inidpriority, 
							  inro, invin, intrans, inengine, inreqcomment, inreqstatus)
CONTEXT:  PL/pgSQL function json_update_req_parts(integer,json,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,character varying,json) line 23 at PERFORM
[2019-10-28 18:48:35.18838700] transaction successfully
[2019-10-28 18:48:58.83659500] transaction successfully
[2019-10-28 18:49:33.52477200] transaction successfully
[2019-10-28 18:56:47.03375600] "Insert_Request: transaction successfully
[2019-10-28 18:56:47.35480500] "Insert_Parts: transaction successfully
[2019-10-28 19:16:04.41281500] "Insert_Request: transaction successfully
[2019-10-28 19:16:04.75088100] "Insert_Parts: transaction successfully
[2019-10-29 20:35:15.58201500] transaction successfully
[2019-10-29 20:35:56.22505500] transaction successfully
[2019-10-29 20:41:08.87311200] transaction successfully registration expenditur complete
[2019-10-29 20:42:03.78990100] transaction successfully update expenditure complete
[2019-10-29 20:42:13.97666800] transaction successfully update expenditure complete
[2019-10-29 20:42:26.18305300] transaction successfully update expenditure complete
[2019-11-03 10:59:09.91486300] transaction successfully
[2019-11-03 15:59:40.72592100] "Insert_Request: transaction successfully
[2019-11-03 15:59:40.94484400] "Insert_Parts: transaction successfully
[2019-11-03 15:59:40.94673400] "Insert_Parts: transaction successfully
[2019-11-03 15:59:40.94850600] "Insert_Parts: transaction successfully
[2019-11-03 15:59:40.95031100] "Insert_Parts: transaction successfully
[2019-11-03 15:59:40.95207300] "Insert_Parts: transaction successfully
[2019-11-03 15:59:40.95388000] "Insert_Parts: transaction successfully
[2019-11-03 15:59:40.95545800] "Insert_Parts: transaction successfully
[2019-11-03 15:59:40.95707800] "Insert_Parts: transaction successfully
[2019-11-03 16:56:13.44598700] transaction successfully
[2019-11-03 17:14:21.32916700] transaction successfully
[2019-11-03 18:25:14.40019200] "Insert_Request: transaction successfully
[2019-11-03 18:25:15.11706800] "Insert_Parts: transaction successfully
[2019-11-03 18:25:15.11897400] "Insert_Parts: transaction successfully
[2019-11-03 18:25:15.12064800] "Insert_Parts: transaction successfully
[2019-11-03 18:25:15.12240200] "Insert_Parts: transaction successfully
[2019-11-03 18:25:15.12436300] "Insert_Parts: transaction successfully
[2019-11-03 19:41:10.94645200] transaction successfully
[2019-11-03 19:42:01.36280900] transaction successfully
[2019-11-03 20:46:17.60963800] "Insert_Request: transaction successfully
[2019-11-03 20:46:17.81794100] "Insert_Parts: transaction successfully
[2019-11-03 20:46:17.82158500] "Insert_Parts: transaction successfully
[2019-11-03 21:12:51.42638900] transaction successfully
[2019-11-04 05:19:04.42613600] transaction successfully
[2019-11-04 05:30:29.22935400] transaction successfully
[2019-11-04 06:09:12.33092900] transaction successfully
[2019-11-04 12:34:33.77201500] "Insert_Request: transaction successfully
[2019-11-04 12:34:34.08690500] "Insert_Parts: transaction successfully
[2019-11-04 13:38:36.55233300] transaction successfully
[2019-11-05 19:43:08.36727600] transaction successfully
[2019-11-05 19:43:16.49251700] transaction successfully
[2019-11-05 19:44:59.55577600] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 6 at SQL statement
[2019-11-05 19:48:44.80342000] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 6 at SQL statement
[2019-11-05 19:49:47.58666500] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 6 at SQL statement
[2019-11-05 19:50:57.55028800] 7ERROR:  invalid input syntax for type date: "null"
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 6 at SQL statement
[2019-11-05 19:52:19.37638100] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 6 at SQL statement
[2019-11-05 19:52:53.61686300] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 6 at SQL statement
[2019-11-05 19:54:34.26325700] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 6 at SQL statement
[2019-11-05 19:58:23.15770700] 7ERROR:  cannot call json_populate_recordset on a scalar
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 6 at SQL statement
[2019-11-05 19:59:32.70723600] transaction successfully
[2019-11-05 20:12:08.15929500] transaction successfully
[2019-11-05 20:12:08.22830800] transaction successfully
[2019-11-05 20:14:46.35024500] 7ERROR:  column reference "idrequest" is ambiguous
LINE 1: SELECT (select  count(*) from parts where idrequest= inidreq...
                                                  ^
DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
QUERY:  SELECT (select  count(*) from parts where idrequest= inidrequest and status_order <> 'delete')
CONTEXT:  PL/pgSQL function json_update_massive_status(json,integer) line 16 at assignment
[2019-11-05 20:14:58.40933700] 7ERROR:  column reference "idrequest" is ambiguous
LINE 1: SELECT (select  count(*) from parts where idrequest= inidreq...
                                                  ^
DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
QUERY:  SELECT (select  count(*) from parts where idrequest= inidrequest and status_order <> 'delete')
CONTEXT:  PL/pgSQL function json_update_massive_status(json,integer) line 16 at assignment
[2019-11-05 20:17:16.27196500] transaction successfully
[2019-11-05 20:17:31.38644300] transaction successfully
[2019-11-05 20:21:38.84336900] transaction successfully
[2019-11-05 20:23:16.45840400] transaction successfully
[2019-11-05 20:28:25.61702900] transaction successfully
[2019-11-05 20:28:25.68275700] transaction successfully
[2019-11-05 20:30:09.67771000] transaction successfully
[2019-11-05 20:32:03.50507500] transaction successfully
[2019-11-05 20:34:31.82027900] transaction successfully
[2019-11-05 20:38:19.82262100] transaction successfully
[2019-11-05 20:38:35.94900300] transaction successfully
[2019-11-05 20:42:56.90115400] transaction successfully
[2019-11-05 20:42:56.98731900] transaction successfully
[2019-11-05 20:43:47.21159200] transaction successfully
[2019-11-05 20:44:01.31846700] transaction successfully
[2019-11-05 20:44:14.87408700] transaction successfully
[2019-11-05 20:44:32.96585300] transaction successfully
[2019-11-05 20:44:52.61515500] transaction successfully
[2019-11-05 20:45:51.66296500] transaction successfully
[2019-11-05 20:51:23.87459400] transaction successfully
[2019-11-05 21:12:21.81634900] transaction successfully
[2019-11-05 21:15:59.74267600] transaction successfully
[2019-11-06 02:22:32.48826400] transaction successfully
[2019-11-06 02:23:36.44645300] transaction successfully
[2019-11-06 02:29:33.51331800] transaction successfully
[2019-11-06 02:29:53.39475000] transaction successfully
[2019-11-06 02:34:30.88746300] transaction successfully
[2019-11-06 02:35:15.63833900] transaction successfully
[2019-11-06 02:35:57.87233800] transaction successfully
[2019-11-06 02:36:15.92188500] transaction successfully
[2019-11-06 02:50:58.44424300] transaction successfully
[2019-11-06 02:53:54.05877800] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 12 at SQL statement
[2019-11-06 02:56:56.39341400] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 12 at SQL statement
[2019-11-06 02:59:43.85346500] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 12 at SQL statement
[2019-11-06 03:02:38.72496200] 7ERROR:  invalid input syntax for type date: ""
CONTEXT:  SQL statement "update parts set comment_parts = j.comment_parts, status_order = j.status_order, date_of_delivery = j.date_of_delivery , real_date = j.real_date
from json_populate_recordset(null::parts, inparts)  j
where parts.idrequest = inidrequest and parts.part = j.part"
PL/pgSQL function json_update_massive_status(json,integer) line 12 at SQL statement
[2019-11-06 03:07:41.71438000] transaction successfully
[2019-11-06 03:08:03.95025300] transaction successfully
[2019-11-06 18:08:11.13369200] transaction successfully registration expenditur complete
[2019-11-06 18:12:51.59400600] transaction successfully registration expenditur complete
[2019-11-06 18:16:06.19534000] transaction successfully registration expenditur complete
[2019-11-06 19:18:54.68759400] transaction successfully registration expenditur complete
[2019-11-06 19:19:38.24111000] transaction successfully registration expenditur complete
[2019-11-06 19:21:19.87644200] 7ERROR:  invalid input syntax for type double precision: ""
CONTEXT:  SQL statement "INSERT INTO expenditure (project_name,afe_number,description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by)   
			select project_name,afe_number, description,start_date,anticipated_date, amount_request, request_by, request_signature,
									 date_request,support_documentation, president_name, president_signature, president_date_approved,
									cfo_name, cfo_signature, cfo_date_approved, created_by,updated_by
			from json_populate_recordset(null::expenditure, inexpenditure)"
PL/pgSQL function insert_expenditure(json) line 7 at SQL statement
[2019-11-06 19:22:03.43172700] transaction successfully registration expenditur complete
[2019-11-06 19:23:14.48325400] transaction successfully registration expenditur complete
[2019-11-06 19:25:46.18162000] transaction successfully registration expenditur complete
[2019-11-06 19:31:32.43147000] transaction successfully registration expenditur complete
[2019-11-06 19:32:37.50986900] transaction successfully registration expenditur complete
[2019-11-07 18:52:51.64157600] transaction successfully
[2019-11-12 17:45:06.58759300] transaction successfully
[2019-11-12 17:45:59.15662300] transaction successfully
[2019-11-12 17:47:10.31936600] transaction successfully
[2019-11-12 17:47:36.85696400] transaction successfully
[2019-11-12 18:09:01.36471200] transaction successfully
[2019-11-12 18:09:49.43788900] 7ERROR:  column reference "idrequest" is ambiguous
LINE 1: UPDATE requests set reqstatus = 'O' where idrequest = inidre...
                                                  ^
DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
QUERY:  UPDATE requests set reqstatus = 'O' where idrequest = inidrequest and reqstatus <> 'O' and reqstatus <> 'NA'
CONTEXT:  PL/pgSQL function json_update_massive_status(json,integer) line 32 at SQL statement
[2019-11-12 18:10:15.43590500] transaction successfully
[2019-11-12 18:10:15.55838600] 7ERROR:  column reference "idrequest" is ambiguous
LINE 1: UPDATE requests set reqstatus = 'O' where idrequest = inidre...
                                                  ^
DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
QUERY:  UPDATE requests set reqstatus = 'O' where idrequest = inidrequest and reqstatus <> 'O' and reqstatus <> 'NA'
CONTEXT:  PL/pgSQL function json_update_massive_status(json,integer) line 32 at SQL statement
[2019-11-12 18:15:08.28787200] transaction successfully
[2019-11-12 18:15:28.71805300] transaction successfully
[2019-11-12 18:19:12.76453200] transaction successfully
[2019-11-12 18:19:33.33208900] transaction successfully
[2019-11-12 18:20:02.95126000] transaction successfully
[2019-11-12 18:21:14.97389800] transaction successfully
[2019-11-12 18:22:50.65152600] transaction successfully
[2019-11-12 18:23:10.89233400] transaction successfully
[2019-11-12 18:23:37.23215900] transaction successfully
[2019-11-12 18:25:26.66538100] transaction successfully
[2019-11-12 18:25:55.35875000] transaction successfully
[2019-11-12 18:37:42.39096500] transaction successfully
[2019-11-12 18:42:40.55014200] transaction successfully
[2019-11-12 18:43:18.31272500] transaction successfully
[2019-11-12 18:43:47.25443900] transaction successfully
[2019-11-12 18:51:12.70888500] transaction successfully
